apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'//这里添加
apply plugin: 'kotlin-android-extensions'//这里添加
apply plugin: 'com.jakewharton.butterknife'
android {
    compileSdkVersion rootProject.ext.compile_sdk_version
    buildToolsVersion '28.0.3'
    defaultConfig {
        applicationId "com.wxy.wxyandroidstudy"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.TestActivity.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
// 设置支持的SO库架构
            abiFilters 'armeabi' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ndk{
                //这里其实我觉可以直接是用"armeabi-v7a"，但国内几个大哥之前使用的都是"armeabi"
                abiFilters "armeabi-v7a"
            }
        }
        debug {
            ndk {
                //这里要加上，否则debug包会出问题,后面三个为可选，x86建议加上不然部分模拟器回报错
                abiFilters "armeabi-v7a"
            }
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi-v7a', 'x86_64'
            universalApk true
        }
    }
    sourceSets.main {
        jniLibs.srcDir 'src/main/jniLibs'
        res.srcDirs = ['src/main/res', 'src/main/res-night']
    }

}
repositories {
    //修改成国内阿里云的maven地址，否则某些地方下载不下来
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta8'
//    implementation project(path: ':SkinLib')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.3.0-alpha03'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha03'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${rootProject.ext.kotlin_version}"
    //主要是这两个依赖
    implementation "org.jetbrains.kotlin:kotlin-reflect:${rootProject.ext.kotlin_version}"
    //主要是这两个依赖
    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
    implementation project(':speechDemo')
//    implementation project(':flutter')
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.0-beta8'

    implementation 'com.github.bumptech.glide:glide:4.9.0'
    kapt 'com.github.bumptech.glide:compiler:4.9.0'
    implementation 'com.github.bumptech.glide:annotations:4.9.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.9.0'
    //rxjava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.13'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    //log
    implementation 'com.apkfuns.logutils:library:1.7.5'
    implementation 'com.squareup.retrofit2:retrofit:2.6.1'//retrofit
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'//转换器，请求结果转换成Model
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'//配合Rxjava 使用

    implementation 'com.android.support:multidex:1.0.3'
    implementation 'jp.wasabeef:glide-transformations:4.1.0'
    //注解框架
    implementation 'com.jakewharton:butterknife:10.1.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
    //leak,内存泄漏检测
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.6.1'
    implementation 'com.tencent.bugly:crashreport:3.1.0'
    implementation "com.airbnb.android:lottie:$lottieVersion"
}
